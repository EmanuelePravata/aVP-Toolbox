#
# This guide is part of the aVP-Toolbox v0.11 - 2023 software. 
#
# aVP-Toolbox ("The software") is licensed under the Creative Commons Attribution 4.0 International License, 
# permitting use, sharing, adaptation, distribution and reproduction in any medium or format, 
# as long as you give appropriate credit to the original author(s) and the source, provide 
# a link to the Creative Commons licence, and indicate if changes were made. 
# The licensor offers the Licensed Material as-is and as-available, and makes no 
# representations or warranties of any kind concerning the Licensed Material, 
# whether express, implied, statutory, or other. This includes, without limitation, 
# warranties of title, merchantability, fitness for a particular purpose, non-infringement, 
# absence of latent or other defects, accuracy, or the presence or absence of errors, 
# whether or not known or discoverable. Where disclaimers of warranties are not allowed 
# in full or in part, this disclaimer may not apply to You. 
# Please go to http://creativecommons.org/licenses/by/4.0/ to view a complete copy of this licence.
#
# Instructions for aVP-Toolbox v0.1 (12.2023) software.
#
# Presumes a Mac/linux system
# 
# Requires segmentation images obtained from 0.6mm3, transverse plane oriented, isotropic MR images. Please do not use non-orthogonally oriented images.  
# 
#              /data - (*)
#                   /orig - (*)
#                       /SubjectID   - contains the segmentations for subject(*)                      
#                   /proc
#                       /SubjectID   - contains images saved during processing
#                   /sbj.list        - list of SubjectIDs 
#              /templates
#                       /SubjectID   - contains aVP atlas and anatomical subdivision probability masks output
#              /results              - contains cross-subject outputs of the study processing scripts
#                  /SubjectID        - contains subject-specific outputs of the study processing scripts
#		   /normalized_iso_L - contains left side subject-specific normalized segmentations 
#		   /normalized_iso_R - contains right side subject-specific normalized segmentations
#              /code                 - contains the scripts used for processing (*)
#                   /localtoolboxes  - contains required matlab tools (*)
#                   /ONcontrol.txt   - contains path to StudyFolder (*)
#              /logs                 - contains logs generated by some processing scripts
#
# 	(*) Must be created before running scripts
#
#
#  - ensure the scripts in .../code are executable: chmod a+x *.sh
#  - please do not include spaces, parentheses or minus signs in the path and StudyFolder names
#  - please avoid zeros at the beginning of folders and filnames
#
# 2a) write location of the study to a file in the code folder, 
#
#   create a file called: ONcontrol.txt in the .../code folder,
#   the first line of the file contains the path needed for the current study.
#   copy, paste and adapt the following line:
æ            /working/opticnerve/StudyFolder
#
# 2b) ensure segmentations are in .nii.gz format, and named according to the following: 
#
#	onc.nii.gz  - optic chiasm   
#	onl.nii.gz  - optic nerve (left) 	
#	onr.nii.gz  - optic nerve (right)	
#	otl.nii.gz  - optic tract (left)
#	otr.nii.gz  - optic tract (right)
#
# 2c) ensure each subject's onl, onr and onc segmentation subdivisions are indexed with the following intensity values:
#
#	-onl and onr
#		iOrb: 2; iCan: 4; iCran: 6
#
#  	-onc
#		Right hemichiasm: 8; Left hemichiasm: 9
#
#
# 3) set up for the scripts
# Processing uses a combination of bash and Matlab scripts, and tools from FSL - FMRIB's Software Library (http://www.fmrib.ox.ac.uk/fsl).
#
# if using Mac/linux, ensure the bash environment is active (will probably owrk with others - e.g. tcsh, but not tested)
#
# Matlab version used for preparing and testing the scripts is R2015b (R2023b was also tested), togeter with the ImageProcessing toolbox.
# The .../code folder should be added to the Matlab paths in order to run the .m scripts.
#
# This version does not have innate excel writing or nifti read/write so add-in toolboxes are needed:
#  for handling excel files: 
#      20130227_xlwrite
#   which includes some java routines.
#  for handling nifti files: 
#      nifti_tools-master
# The toolboxes are provided in the package. Place these toolboxes in a localtoolboxes subfolder of the code folder for the study 
#
# 4) work through the requisite processing for the study.
# Typical workflow (see aVP_processing.pptx for flowchart of routines, with inputs and outputs): 
#   a - set up as above
#     - in bash terminal, cd to StudyFolder/code
#   b - run ./aVP_prep.sh to break down the ON in various parts
#   c - get the basic stats (voxel number and volume) about the segmentation with ./aVP_basics.sh
#   d - generate linearized and normalized images (.../data/proc), extract morpho data (.../results) with ./aVP_normalize.m (Matlab)
#   e - check single subject's results, L and R: ./aVP_viewiso.sh (StudyFolder/results/normalized_iso_L and StudyFolder/results/normalized_iso_R  folders)
#   f - generate templates with ./aVP_doatlas.sh  - Generates Left (aVP_prob_l.nii.gz), Right (aVP_prob_r.nii.gz) and average Left-Right (aVP_prob_lr.nii.gz) templates. Generates iOrb, iCan, iCran, OC and OT anatomical subdivisions probability masks. 
#   g - for each new atlas, a meaningful lower probability threshold should be determined following statistical validation. The aVP-24 atlas is presented with a 50% probability threshold (See Pravatà, E., Diociasi, A., Navarra, R. et al. Biometry extraction and probabilistic anatomical atlas of the anterior Visual Pathway using dedicated high-resolution 3-D MRI. Sci Rep 14, 453 (2024). https://doi.org/10.1038/s41598-023-50980-x for details). 
